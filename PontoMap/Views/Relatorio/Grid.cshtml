<style>

</style>


@{
    Layout = "";
}

@{
    var grid = new WebGrid(source: Model, canSort: false, canPage: false);
}

<div class="gridContainer">

    @if (Model == null)
    {
        return;
    }


    @grid.GetHtml(
        tableStyle: "table",
        headerStyle: "thead-inverse",
        htmlAttributes: new { id = "webGrid" },
        columns:
            grid.Columns(
                grid.Column(columnName: "DtRegistroString", header: "DATA", format: @<text>@item.DtRegistroString.Remove(0, 11)</text>),
                grid.Column(columnName: "DtRegistroString", header: "HORA", format: @<text>@item.DtRegistroString.Remove(item.DtRegistroString.Length - 12)</text>),
                grid.Column(columnName: "endereço", header: "ENDEREÇO", format:
                    @<a href="http://maps.google.com/?q=@item.CdLat.ToString().Replace(",", "."),@item.CdLng.ToString().Replace(",", ".")"
                        onclick="PopupCenter(this.href, 'Endereço', 900, 500)"
                        target="_blank">
                        <span class="latLngSpan">
                            @item.CdLat.ToString().Replace(",", "."), @item.CdLng.ToString().Replace(",", ".")
                        </span>
                    </a>),
                grid.Column(columnName: "CdLat", header: "LATITUDE", format: @<text>@item.CdLat</text>),
                grid.Column(columnName: "CdLng", header: "LONGITUDE", format: @<text>@item.CdLng</text>)
                )

        )
</div>


<script>

    function geocodeLatLng(latLang, delay) {
        setTimeout(function () {
            var input = latLang.html();
            var latlngStr = input.toString().split(',');
            var latlng = { lat: parseFloat(latlngStr[0]), lng: parseFloat(latlngStr[1]) };
            geocoder.geocode({ 'location': latlng }, function (results, status) {
                if (status === 'OK') {
                    if (results[1]) {
                        latLang.html(results[1].formatted_address);
                    } else {
                        latLang.html(latLang);
                        
                    }
                } else {

                    geocodeLatLng(latLang, delay + 10);
                }
            });

        }, delay);
    }


    function PopupCenter(url, title, w, h) {
        var dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : screen.left;
        var dualScreenTop = window.screenTop != undefined ? window.screenTop : screen.top;

        var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
        var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;

        var left = ((width / 2) - (w / 2)) + dualScreenLeft;
        var top = ((height / 2) - (h / 2)) + dualScreenTop;
        var newWindow = window.open(url, title, 'scrollbars=yes, width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);

        if (window.focus) {
            newWindow.focus();
        }
    }

    var iterator = 0;
    $(".latLngSpan").each(function () {
        $(this).text(geocodeLatLng($(this), 500 * iterator));
        iterator = iterator + 1;
    });
</script>
